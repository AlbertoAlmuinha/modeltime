% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modeltime-accuracy.R
\name{modeltime_accuracy}
\alias{modeltime_accuracy}
\title{Calculate Accuracy Metrics}
\usage{
modeltime_accuracy(object, new_data = NULL, ...)
}
\arguments{
\item{object}{A fitted model object that is either (1) a workflow that has been fit by \code{\link[=fit.workflow]{fit.workflow()}} or
(2) a parsnip model that has been fit using \code{\link[=fit.model_spec]{fit.model_spec()}}}

\item{new_data}{A \code{tibble} containing future information .}

\item{...}{Not currently used.}
}
\value{
A tibble with accuracy estimates.
}
\description{
This is a wrapper for \code{yardstick} that simplifies accuracy metric
calculations from a fitted \code{workflow} (trained workflow) or \code{model_fit} (trained parsnip model).
}
\details{
The following accuracy metrics are included by default:
\itemize{
\item MAE - Mean absolute error, \code{\link[=mae_vec]{mae_vec()}}
\item MAPE - Mean absolute percentage error, \code{\link[=mape_vec]{mape_vec()}}
\item MASE  - Mean absolute scaled errror, \code{\link[=mase_vec]{mase_vec()}}
\item SMAPE - Symmetric mean absolute percentage error, \code{\link[=smape_vec]{smape_vec()}}
\item RMSE  - Root mean squared error, \code{\link[=rmse_vec]{rmse_vec()}}
\item RSQ   - R-squared, \code{\link[=rsq_vec]{rsq_vec()}}
}
}
\examples{
library(dplyr)
library(parsnip)
library(rsample)
library(timetk)
library(modeltime)

# Data
m750 <- m4_monthly \%>\% filter(id == "M750")

# Split Data 80/20
splits <- initial_time_split(m750, prop = 0.8)

# Model Spec
model_spec <- arima_reg(
        period                   = 12,
        non_seasonal_ar          = 3,
        non_seasonal_differences = 1,
        non_seasonal_ma          = 3,
        seasonal_ar              = 1,
        seasonal_differences     = 0,
        seasonal_ma              = 1
    ) \%>\%
    set_engine("forecast::Arima")

# Fit Spec
model_fit <- model_spec \%>\%
    fit(log(value) ~ date, data = training(splits))

# --- ACCURACY ---

model_fit \%>\%
    modeltime_accuracy(new_data = testing(splits))

}
