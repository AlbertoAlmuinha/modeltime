% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modeltime-recursive.R
\name{recursive}
\alias{recursive}
\title{Create a recursive time series model from arbitrary parsnip regression model}
\usage{
recursive(object, transform, train_tail, ...)
}
\arguments{
\item{object}{An object of model_fit class}

\item{transform}{A transformation performed on new_data after
each step of recursive algorithm. It can be an object of types:
\itemize{
\item recipe
\item function
}}

\item{train_tail}{A tibble with tail of training data set.
In most cases it'll be required to create some variables
based on dependent variable.}
}
\value{
An object with added \code{recursive} class
}
\description{
Create a recursive time series model from arbitrary parsnip regression model
}
\examples{
library(dplyr)
library(parsnip)
library(recipes)
library(modeltime)

dax_stock <-
   as_tibble(EuStockMarkets) \%>\%
   select(DAX) \%>\%
   bind_rows(tibble(DAX = rep(NA, 30))) # Adding new data

recipe_dax_stock <-
   recipe(DAX ~ ., data = dax_stock) \%>\%
   step_lag(all_outcomes(), lag = 1:10) \%>\%
   prep()

dax_stock_m <-
   juice(recipe_dax_stock)

train_data <-
   dax_stock_m \%>\%
   filter(!is.na(DAX)) \%>\%
   na.omit()

new_data <-
   dax_stock_m \%>\%
   filter(is.na(DAX))

model_linear <-
   linear_reg() \%>\%
   set_engine("lm") \%>\%
   fit(DAX ~ ., data = train_data)

recursive_linear <-
   model_linear \%>\%
   recursive(recipe_dax_stock,
             train_tail = tail(train_data, 10))

pred <-
   recursive_linear \%>\%
   predict(new_data)

}
